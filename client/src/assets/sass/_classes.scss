@use "./variables" as *;
@use "./mixins" as *;
@use "./global" as *;

.gradient-text {
	background: linear-gradient(to right, rgb(255, 0, 0), rgb(255, 153, 0));
	background-clip: text;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
}

// Show & Hide Element
.hide-height {
	max-height: 0 !important;
}

.show-display {
	display: initial !important;
}

.hide-display {
	display: none !important;
}

.show-scale {
	transform: scale(1) !important;
}

.hide-scale {
	transform: scale(0) !important;
	height: 0 !important;
	overflow: hidden;
}

.btn {
	background-color: white;
	font-size: 18px;
	font-weight: 500;
	padding: 5px 10px;
	margin-block: 10px;
	display: block;
	cursor: pointer;
	border: 2px solid get(primary);
	border-radius: 8px;
	transition: all 0.2s ease-in-out !important;
	&:hover {
		background: get(primary);
		color: get(white);
		border-color: get(primary);
	}
}

$vars: ("primary", "secondary", "white", "black", "dimWhite", "dimBlack", "lightWhite", "lightBlack");
@each $var in $vars {
	.text-#{$var} {
		color: get($var);
	}
	.bg-#{$var} {
		background-color: get($var);
	}
}

.w-full {
	width: 100%;
}

.shadow {
	box-shadow: get(shadow);
}

.hidden {
	display: none;
}

.flex {
	display: flex;
}

.flex-between {
	@include flex(space-between, center);
	gap: 10px;
}

.flex-start {
	@include flex(flex-start, center);
	gap: 10px;
}

.flex-center {
	@include flex(center, center);
	gap: 10px;
}

.flex-around {
	@include flex(space-around, center);
	gap: 10px;
}

$gaps: (5, 10, 15, 20, 25, 30);
@each $gap in $gaps {
	.gap-#{$gap} {
		gap: #{$gap}px;
	}
}
